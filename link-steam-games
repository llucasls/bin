#!/usr/bin/env python3
import configparser
import csv
import os
import sys
from pathlib import Path

desktop_dir = Path("~/Desktop").expanduser()
config_dir = Path(os.environ.get("XDG_CONFIG_HOME", "~/.config")).expanduser()
config_file = config_dir / "steam_games.csv"


def parse_desktop_file(filepath: Path) -> configparser.SectionProxy | None:
    try:
        parser = configparser.ConfigParser(interpolation=None)
        parser.read(filepath, encoding="utf-8")
        if "Desktop Entry" not in parser:
            return None

        return parser["Desktop Entry"]
    except Exception:
        return None


def parse_entry(entry: configparser.SectionProxy) -> tuple[str, str] | None:
    exec_val: str = entry.get("Exec", "")
    if not exec_val.startswith("steam steam://rungameid/"):
        return None

    _name = entry.get("Name")
    if _name is None:
        return None
    name: str = _name.lower().replace(" ", "-")

    try:
        gameid: str = format(exec_val.split("/")[3], ">07")
    except Exception:
        return None

    return gameid, name


def main():
    config_dir.mkdir(mode=0o700, parents=True, exist_ok=True)
    config_file.touch(mode=0o600, exist_ok=True)

    if not desktop_dir.exists():
        print("Desktop directory does not exist", file=sys.stderr)
        return 1

    for file in desktop_dir.iterdir():
        if not file.name.endswith(".desktop"):
            continue

        entry = parse_desktop_file(file)
        if entry is None:
            continue

        game_data = parse_entry(entry)
        if game_data is None:
            continue
        gameid, name = game_data

        try:
            with config_file.open(mode="a", newline="", encoding="utf-8") as f:
                writer = csv.writer(f)
                writer.writerow([gameid, name])
            file.unlink()
        except Exception:
            continue

    try:
        desktop_dir.rmdir()
    except OSError:
        print(
            "Desktop directory is not empty. The following files were found:",
            file=sys.stderr,
        )
        for file in desktop_dir.iterdir():
            print(file.name, file=sys.stderr)
        return 2


if __name__ == "__main__":
    sys.exit(main())
